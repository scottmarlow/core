<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.jboss.weld</groupId>
    <artifactId>weld-core-jboss-as7-updater</artifactId>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.jboss.weld</groupId>
        <artifactId>weld-core-parent</artifactId>
        <version>4.0.2-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <name>JBoss AS7 Updater</name>

    <!-- Minimal metadata -->
    <description>A script to update Weld in JBoss AS7/WildFly</description>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>
    <url>http://weld.cdi-spec.org</url>


    <properties>
        <!-- We have to explicitly state the project version. We cannot use ${project.version}
        as the release plugin won't deal with double evaluation -->
        <weld.update.version>4.0.2-SNAPSHOT</weld.update.version>

        <!-- Following section is dedicated to WFLY download and patch creation -->
        <!-- Path to the patched WFLY server, if you chose to let Maven download it, this default will be used-->
        <!-- Maven will download pristine WFLY for you, but you need to provide a patched one yourself and make JBOSS_HOME point at it-->
        <wildflyPatched>${project.build.directory}/wildfly-patched/wildfly-${wildfly.download.version}</wildflyPatched>
        <!--Path to patch file; only change if you have your own, else Maven downloads it-->
        <patchConfigFile>${project.build.directory}/patch.xml</patchConfigFile>
        <!--These patches are automatically downloaded from github.com/weld/build/tree/master/wildfly; specify the file name here to determine which one to use-->
        <patch.file.name>patch-config-wildfly-14-weld-3.1.xml</patch.file.name>
        <!--Use this property to set the path to and the name of the resulting patch zip file-->
        <patchOutputFile>${project.build.directory}/patch.zip</patchOutputFile>
        <!--Path to original (pristine) WFLY-->
        <!--Running with -Pdownload-wfly will make Maven download the version specified below-->
        <wildflyOriginal>${project.build.directory}/wildfly-original/wildfly-${wildfly.download.version}</wildflyOriginal>
        <wildfly.download.version>20.0.1.Final</wildfly.download.version>

        <!--Plugin versions-->
        <download.maven.plugin>1.6.6</download.maven.plugin>
        <patch.gen.plugin>2.1.1.Final</patch.gen.plugin>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-impl</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.probe</groupId>
            <artifactId>weld-probe-core</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.module</groupId>
            <artifactId>weld-ejb</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.module</groupId>
            <artifactId>weld-jsf</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.module</groupId>
            <artifactId>weld-jta</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.module</groupId>
            <artifactId>weld-web</artifactId>
            <version>${weld.update.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-ext-lib</artifactId>
            <version>${cdi.tck-3-0.version}</version>
        </dependency>
    </dependencies>
    <profiles>
        <!--Downloads WildFly, can be used for patch creation purposes-->
        <profile>
            <id>download-wfly</id>
            <properties>
                <wildflyOriginal>${project.build.directory}/wildfly-original/wildfly-${wildfly.download.version}</wildflyOriginal>
                <!--Set jboss.home property to the location of the copy of WFLY we download-->
                <jboss.home>${project.build.directory}/wildfly-patched/wildfly-${wildfly.download.version}</jboss.home>
                <!--Set wildflyPatched property for patch creation, this assumes you patch the WFLY by running -Pupdate-jboss-as as well-->
                <wildflyPatched>${project.build.directory}/wildfly-patched/wildfly-${wildfly.download.version}</wildflyPatched>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-wildfly</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>${wildfly.download.version}</version>
                                            <type>tar.gz</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}/wildfly-original</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <!-- Execute this after we've downloaded WFLY -->
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/wildfly-patched</outputDirectory>
                                    <resources>          
                                        <resource>
                                            <directory>${project.build.directory}/wildfly-original</directory>
                                        </resource>
                                    </resources>              
                                </configuration>            
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>update-jboss-as</id>
            <build>
                <defaultGoal>package</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>update-jboss-as</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <property file="${basedir}/local.build.properties" />
                                        <property file="${basedir}/build.properties" />
                                        <property name="jboss.home" value="${env.JBOSS_HOME}" />

                                        <echo>

                                            =========================================================================

                                            Updating Weld modules

                                            Weld version: ${weld.update.version}

                                            JBOSS_HOME: ${jboss.home}

                                            =========================================================================

                                        </echo>

                                        <available file="${jboss.home}/modules/system" property="module.dir" value="${jboss.home}/modules/system/layers/base/org/jboss/weld" />
                                        <!-- The older versions of JBoss AS used
                                        this location for modules -->
                                        <property name="module.dir" value="${jboss.home}/modules/org/jboss/weld" />
                                        <property name="jsf.injection.dir" value="${module.dir}/../as/jsf-injection/main" />

                                        <property name="weld.core.file" value="weld-core-impl-${weld.update.version}.jar" />
                                        <property name="weld.probe.file" value="weld-probe-core-${weld.update.version}.jar" />
                                        <property name="weld.ejb.file" value="weld-ejb-${weld.update.version}.jar" />
                                        <property name="weld.jsf.file" value="weld-jsf-${weld.update.version}.jar" />
                                        <property name="weld.jta.file" value="weld-jta-${weld.update.version}.jar" />
                                        <property name="weld.web.file" value="weld-web-${weld.update.version}.jar" />
                                        <property name="weld.ejb.file" value="weld-ejb-${weld.update.version}.jar" />

                                        <delete>
                                            <fileset dir="${module.dir}/core/main" includes="*.jar" />
                                            <fileset dir="${module.dir}/spi/main" includes="*.jar" />
                                            <fileset dir="${module.dir}/api/main" includes="*.jar" />
                                            <fileset dir="${jsf.injection.dir}" includes="weld-*jsf*.jar" />
                                            <fileset dir="${module.dir}/probe/main" includes="*.jar" />
                                            <fileset dir="${module.dir}/core/main" includes="*.index" />
                                            <fileset dir="${module.dir}/spi/main" includes="*.index" />
                                            <fileset dir="${module.dir}/api/main" includes="*.index" />
                                            <fileset dir="${jsf.injection.dir}" includes="weld-*jsf*.index" />
                                            <fileset dir="${module.dir}/probe/main" includes="*.index" />
                                        </delete>

                                        <copy todir="${module.dir}/core/main" overwrite="true">
                                            <fileset dir="target/dependency/lib">
                                                <include name="${weld.core.file}" />
                                                <include name="${weld.ejb.file}" />
                                                <include name="${weld.jta.file}" />
                                                <include name="${weld.web.file}" />
                                                <include name="${weld.ejb.file}" />
                                            </fileset>
                                        </copy>


                                        <replaceregexp file="${module.dir}/core/main/module.xml" match="path=&quot;weld-core-impl.*?&quot;" replace="path=&quot;${weld.core.file}&quot;" byline="true" />
                                        <replaceregexp file="${module.dir}/core/main/module.xml" match="path=&quot;weld-ejb.*?&quot;" replace="path=&quot;${weld.ejb.file}&quot;" byline="true" />
                                        <replaceregexp file="${module.dir}/core/main/module.xml" match="path=&quot;weld-jta.*?&quot;" replace="path=&quot;${weld.jta.file}&quot;" byline="true" />
                                        <replaceregexp file="${module.dir}/core/main/module.xml" match="path=&quot;weld-web.*?&quot;" replace="path=&quot;${weld.web.file}&quot;" byline="true" />

                                        <copy todir="${module.dir}/probe/main" overwrite="true">
                                            <fileset dir="target/dependency/lib">
                                                <include name="${weld.probe.file}" />
                                            </fileset>
                                        </copy>
                                        <replaceregexp file="${module.dir}/probe/main/module.xml" match="path=&quot;weld-probe-core.*?&quot;" replace="path=&quot;${weld.probe.file}&quot;" byline="true" />

                                        <copy todir="${module.dir}/spi/main" overwrite="true">
                                            <fileset dir="target/dependency/lib">
                                                <include name="weld-spi-${weld.api.version}.jar" />
                                            </fileset>
                                        </copy>

                                        <replaceregexp file="${module.dir}/spi/main/module.xml" match="path=&quot;.*?&quot;" replace="path=&quot;weld-spi-${weld.api.version}.jar&quot;" byline="true" />

                                        <copy todir="${module.dir}/api/main" overwrite="true">
                                            <fileset dir="target/dependency/lib">
                                                <include name="weld-api-${weld.api.version}.jar" />
                                            </fileset>
                                        </copy>

                                        <replaceregexp file="${module.dir}/api/main/module.xml" match="path=&quot;.*?&quot;" replace="path=&quot;weld-api-${weld.api.version}.jar&quot;" byline="true" />

                                        <copy todir="${jsf.injection.dir}" overwrite="true">
                                            <fileset dir="target/dependency/lib">
                                                <include name="${weld.jsf.file}" />
                                            </fileset>
                                        </copy>

                                        <replaceregexp file="${jsf.injection.dir}/module.xml" match="path=&quot;weld-jsf.*?&quot;" replace="path=&quot;weld-jsf-${weld.update.version}.jar&quot;" byline="true" />
                                        <replaceregexp file="${jsf.injection.dir}/module.xml" match="path=&quot;weld-core-jsf.*?&quot;" replace="path=&quot;weld-jsf-${weld.update.version}.jar&quot;" byline="true" />
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>install-cdi-tck-ext-lib</id>
            <activation>
                <property>
                    <name>tck</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-cdi-tck-ext-lib</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <copy todir="${env.JBOSS_HOME}/standalone/lib/ext" overwrite="true">
                                            <fileset dir="target/dependency/lib">
                                                <include name="cdi-tck-ext-lib-${cdi.tck-3-0.version}.jar" />
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>wfly-patch-gen</id>
            <build>
                <plugins>
                    <!--Downloads given patch file from our build repository-->
                    <plugin>
                        <groupId>com.googlecode.maven-download-plugin</groupId>
                        <artifactId>download-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>download-patch-file</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>wget</goal>
                                </goals>
                                <configuration>
                                    <url>https://raw.githubusercontent.com/weld/build/master/wildfly/${patch.file.name}</url>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <outputFileName>patch.xml</outputFileName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jboss.as</groupId>
                        <artifactId>patch-gen-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-patch-file</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>generate-patch</goal>
                                </goals>
                                <configuration>
                                    <appliesToDist>${wildflyOriginal}</appliesToDist>
                                    <updatedDist>${wildflyPatched}</updatedDist>
                                    <patchConfig>${patchConfigFile}</patchConfig>
                                    <outputFile>${patchOutputFile}</outputFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.googlecode.maven-download-plugin</groupId>
                    <artifactId>download-maven-plugin</artifactId>
                    <version>${download.maven.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>patch-gen-maven-plugin</artifactId>
                    <version>${patch.gen.plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependency/lib</outputDirectory>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <includeArtifactIds>cdi-api,weld-api,weld-core-impl,weld-jsf,weld-ejb,weld-jta,weld-web,weld-spi,cdi-tck-ext-lib,weld-probe-core</includeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
